Sections:
00: ".text" (0-530)


Source: "videocore.s"
                            	     1: #-------------------------------------------------------------------------
                            	     2: # VideoCore IV implementation of RGBtoHDMI
                            	     3: # (c) IanB Nov 2021
                            	     4: #-------------------------------------------------------------------------
                            	     5: 
                            	     6: # GPIO registers
                            	     7: 
                            	     8: .equ GPU_COMMAND,          0x7e0000a0  #use MBOX0-MBOX7 for ARM communications
                            	     9: .equ GPU_DATA_BUFFER_0,    0x7e0000a4
                            	    10: .equ GPU_DATA_BUFFER_1,    0x7e0000a8
                            	    11: .equ GPU_DATA_BUFFER_2,    0x7e0000ac
                            	    12: .equ GPU_SYNC,             0x7e0000b0  #gap in data block to allow fast 3 register read on ARM side
                            	    13: .equ GPU_DATA_BUFFER_3,    0x7e0000b4  #using a single ldr and a two register ldmia
                            	    14: .equ GPU_DATA_BUFFER_4,    0x7e0000b8  #can't use more than a single unaligned two register ldmia
                            	    15: .equ GPU_DATA_BUFFER_5,    0x7e0000bc  #on the peripherals and an aligned ldmia won't work
                            	    16: 
                            	    17: .equ GPU_COMMAND_offset,   0
                            	    18: .equ DATA_BUFFER_0_offset, 4
                            	    19: .equ DATA_BUFFER_1_offset, 8
                            	    20: .equ DATA_BUFFER_2_offset, 12
                            	    21: .equ GPU_SYNC_offset,      16
                            	    22: .equ DATA_BUFFER_3_offset, 20
                            	    23: .equ DATA_BUFFER_4_offset, 24
                            	    24: .equ DATA_BUFFER_5_offset, 28
                            	    25: 
                            	    26: .equ GPLEV0,          0x7e200034
                            	    27: 
                            	    28: #flag bits  31,30, 17,16 15,14 1,0
                            	    29: .equ FINAL_BIT,            31             #signal if this sample word is the last
                            	    30: #bit 30 is second copy of ALT_MUX_BIT
                            	    31: .equ PSYNC_BIT,            17             #alternates on each full 6 word buffer
                            	    32: .equ ODD_EVEN_BIT_HI,      16             #signal if low or high 16 bit sample is to be used
                            	    33: #bit 15 unused
                            	    34: .equ ALT_MUX_BIT,          14             #moved version of MUX bit also at bit position 30
                            	    35: .equ ODD_EVEN_BIT_LO,      0              #signal if low or high 16 bit sample is to be used
                            	    36: 
                            	    37: .equ DEFAULT_BIT_STATE,    0x00020001     #FINAL_BIT=0, PSYNC_BIT=1, ODD_EVEN_BIT_HI=0, ODD_EVEN_BIT_LO=1
                            	    38: 
                            	    39: #GPIO bits
                            	    40: .equ MUX_BIT,              24             #video input on MUX bit for FFOSD
                            	    41: .equ SYNC_BIT,             23             #sync input
                            	    42: .equ VIDEO_MASK,           0x3ffc         #12bit GPIO mask
                            	    43: 
                            	    44: #command bits
                            	    45: .equ TERMINATE_FLAG,       31
                            	    46: .equ SYNC_ABORT_FLAG,      30
                            	    47: #bits 20-22 are simple sync type
                            	    48: .equ LEADING_SYNC_FLAG,    16
                            	    49: .equ SIMPLE_SYNC_FLAG,     15
                            	    50: .equ HIGH_LATENCY_FLAG,    14
                            	    51: .equ OLD_FIRMWARE_FLAG,    13
                            	    52: 
                            	    53: .equ COMMAND_MASK,         0x00000fff     #masks out command bits that trigger sync detection
                            	    54: #macros
                            	    55: 
                            	    56: .macro LO_PSYNC_CAPTURE
                            	    57: wait_psync_lo\@:
                            	    58:    ld     r0, (r4)
                            	    59:    btst   r0, PSYNC_BIT
                            	    60:    bne    wait_psync_lo\@
                            	    61:    btst   r0, MUX_BIT
                            	    62:    and    r0, r6
                            	    63:    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	    64:    sub    r3, 1
                            	    65:    or     r0, r2           #merge bit state
                            	    66: .endm
                            	    67: 
                            	    68: .macro HI_PSYNC_CAPTURE
                            	    69: wait_psync_hi\@:
                            	    70:    ld     r1, (r4)
                            	    71:    btst   r1, PSYNC_BIT
                            	    72:    beq    wait_psync_hi\@
                            	    73:    btst   r1, MUX_BIT
                            	    74:    and    r1, r6
                            	    75:    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	    76:    lsl    r1, 16           #merge lo and hi samples
                            	    77:    cmp    r3, 0
                            	    78:    or     r0, r1
                            	    79: .endm
                            	    80: 
                            	    81: 
                            	    82: .macro OFW_LO_PSYNC_CAPTURE
                            	    83: wait_psync_lo\@:
                            	    84:    ld     r0, (r4)
                            	    85:    btst   r0, PSYNC_BIT
                            	    86:    bne    wait_psync_lo\@
                            	    87:    ld     r0, (r4)
                            	    88:    btst   r0, MUX_BIT
                            	    89:    and    r0, r6
                            	    90:    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	    91:    sub    r3, 1
                            	    92:    or     r0, r2           #merge bit state
                            	    93: .endm
                            	    94: 
                            	    95: .macro OFW_HI_PSYNC_CAPTURE
                            	    96: wait_psync_hi\@:
                            	    97:    ld     r1, (r4)
                            	    98:    btst   r1, PSYNC_BIT
                            	    99:    beq    wait_psync_hi\@
                            	   100:    ld     r1, (r4)
                            	   101:    btst   r1, MUX_BIT
                            	   102:    and    r1, r6
                            	   103:    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	   104:    lsl    r1, 16           #merge lo and hi samples
                            	   105:    cmp    r3, 0
                            	   106:    or     r0, r1
                            	   107: .endm
                            	   108: 
                            	   109: 
                            	   110: .macro HL_LO_PSYNC_CAPTURE
                            	   111: wait_psync_lo\@:
                            	   112:    ld     r0, (r4)
                            	   113:    btst   r0, PSYNC_BIT
                            	   114:    bne    wait_psync_lo\@
                            	   115:    btst   r0, MUX_BIT
                            	   116:    and    r0, r6
                            	   117:    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	   118: 
                            	   119: .endm
                            	   120: 
                            	   121: .macro HL_HI_PSYNC_CAPTURE
                            	   122: wait_psync_hi\@:
                            	   123:    ld     r1, (r4)
                            	   124:    btst   r1, PSYNC_BIT
                            	   125:    beq    wait_psync_hi\@
                            	   126:    btst   r1, MUX_BIT
                            	   127:    and    r1, r6
                            	   128:    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	   129:    lsl    r1, 16           #merge lo and hi samples
                            	   130:    or     r0, r1
                            	   131: .endm
                            	   132: 
                            	   133: 
                            	   134: .macro EDGE_DETECT
                            	   135: waitPSE\@:
                            	   136:    ld     r0, (r4)
                            	   137:    eor    r0, r2
                            	   138:    btst   r0, PSYNC_BIT
                            	   139:    bne    waitPSE\@
                            	   140:    eor    r0, r2       #restore r0 value
                            	   141:    bchg   r2, PSYNC_BIT
                            	   142: .endm
                            	   143: 
                            	   144: 
                            	   145: # main code entry point
00:00000000 0500            	   146:    di
00:00000002 106A            	   147:    cmp    r0, 1
00:00000004 8D18            	   148:    bne    not_gpio_read_benchmark
00:00000006 02E8A0860100    	   149:    mov    r2, 100000
00:0000000C 01E83400207E    	   150:    mov    r1, GPLEV0
                            	   151: read_bench_loop:
00:00000012 1308            	   152:    ld     r3, (r1)  #read gpio
00:00000014 1266            	   153:    sub    r2, 1
00:00000016 026A            	   154:    cmp    r2, 0
00:00000018 FD18            	   155:    bne    read_bench_loop
00:0000001A 0400            	   156:    ei
00:0000001C 5A00            	   157:    rts
                            	   158: 
                            	   159: not_gpio_read_benchmark:
00:0000001E 206A            	   160:    cmp    r0, 2
00:00000020 9018            	   161:    bne    not_mbox_write_benchmark
00:00000022 02E8A0860100    	   162:    mov    r2, 100000
00:00000028 01E8BC00007E    	   163:    mov    r1, GPU_DATA_BUFFER_5
00:0000002E 0360            	   164:    mov    r3, 0
                            	   165: write_bench_loop:
00:00000030 1309            	   166:    st     r3, (r1)  #write to mbox
00:00000032 1266            	   167:    sub    r2, 1
00:00000034 026A            	   168:    cmp    r2, 0
00:00000036 FD18            	   169:    bne    write_bench_loop
00:00000038 0400            	   170:    ei
00:0000003A 5A00            	   171:    rts
                            	   172: 
                            	   173: exit:
00:0000003C 0400            	   174:    ei
00:0000003E 0F03            	   175:    pop   r0-r15,pc
                            	   176: 
                            	   177: not_mbox_write_benchmark:
00:00000040 8F03            	   178:    push   r0-r15,lr
00:00000042 04E83400207E    	   179:    mov    r4, GPLEV0
00:00000048 05E8A000007E    	   180:    mov    r5, GPU_COMMAND
00:0000004E 06E8FC3F0000    	   181:    mov    r6, VIDEO_MASK
00:00000054 07E8FF0F0000    	   182:    mov    r7, COMMAND_MASK
00:0000005A 08E801000200    	   183:    mov    r8, DEFAULT_BIT_STATE
00:00000060 0C60            	   184:    mov    r12, 0                       # remains at zero for rest of the code
00:00000062 1D60            	   185:    mov    r13, 1                       # remains at 1 for rest of the code
00:00000064 5C31            	   186:    st     r12, DATA_BUFFER_0_offset(r5)
00:00000066 5C32            	   187:    st     r12, DATA_BUFFER_1_offset(r5)
00:00000068 5C33            	   188:    st     r12, DATA_BUFFER_2_offset(r5)
00:0000006A 5C35            	   189:    st     r12, DATA_BUFFER_3_offset(r5)
00:0000006C 5C36            	   190:    st     r12, DATA_BUFFER_4_offset(r5)
00:0000006E 5C37            	   191:    st     r12, DATA_BUFFER_5_offset(r5)
                            	   192: 
                            	   193: wait_for_command:
00:00000070 5021            	   194:    ld     r0, DATA_BUFFER_0_offset(r5)
00:00000072 5122            	   195:    ld     r1, DATA_BUFFER_1_offset(r5)
00:00000074 5223            	   196:    ld     r2, DATA_BUFFER_2_offset(r5)
00:00000076 5325            	   197:    ld     r3, DATA_BUFFER_3_offset(r5)
00:00000078 5926            	   198:    ld     r9, DATA_BUFFER_4_offset(r5)
00:0000007A 5A27            	   199:    ld     r10, DATA_BUFFER_5_offset(r5)
00:0000007C 5C30            	   200:    st     r12, GPU_COMMAND_offset(r5)    #set command register to 0
00:0000007E F071            	   201:    bset   r0, FINAL_BIT
00:00000080 F171            	   202:    bset   r1, FINAL_BIT
00:00000082 F271            	   203:    bset   r2, FINAL_BIT
00:00000084 F371            	   204:    bset   r3, FINAL_BIT
00:00000086 F971            	   205:    bset   r9, FINAL_BIT
00:00000088 FA71            	   206:    bset   r10, FINAL_BIT
                            	   207: 
00:0000008A 5031            	   208:    st     r0, DATA_BUFFER_0_offset(r5)
00:0000008C 5132            	   209:    st     r1, DATA_BUFFER_1_offset(r5)
00:0000008E 5233            	   210:    st     r2, DATA_BUFFER_2_offset(r5)
00:00000090 5335            	   211:    st     r3, DATA_BUFFER_3_offset(r5)
00:00000092 5936            	   212:    st     r9, DATA_BUFFER_4_offset(r5)
00:00000094 5A37            	   213:    st     r10, DATA_BUFFER_5_offset(r5)
                            	   214: 
00:00000096 8240            	   215:    mov    r2, r8                        #set the default state of the control bits
                            	   216: 
                            	   217: wait_for_command_loop:
00:00000098 0100            	   218:    nop    #some idle time to reduce continuous polling of register
00:0000009A 5320            	   219:    ld     r3, GPU_COMMAND_offset(r5)
00:0000009C 0100            	   220:    nop
00:0000009E 036A            	   221:    cmp    r3, 0
00:000000A0 0100            	   222:    nop
00:000000A2 7B18            	   223:    beq    wait_for_command_loop
00:000000A4 F36D            	   224:    btst   r3, TERMINATE_FLAG
00:000000A6 CB18            	   225:    bne    exit
00:000000A8 E36D            	   226:    btst   r3, SYNC_ABORT_FLAG
00:000000AA E318            	   227:    bne    wait_for_command
00:000000AC F36C            	   228:    btst   r3, SIMPLE_SYNC_FLAG                   #bit signals bits 20-22 are a sync command
00:000000AE 00906700        	   229:    beq    do_capture
00:000000B2 3140            	   230:    mov    r1, r3
00:000000B4 417B            	   231:    lsr    r1, 20
00:000000B6 E1C0470F        	   232:    and    r1, 0x07
                            	   233: 
                            	   234:    #simple mode sync detection, enters with PSYNC_BIT set in r2
00:000000BA 016A            	   235:    cmp    r1, 0
00:000000BC 3918            	   236:    beq    edge_trail_neg
00:000000BE 116A            	   237:    cmp    r1, 1
00:000000C0 2718            	   238:    beq    edge_lead_neg
00:000000C2 1273            	   239:    bclr   r2, PSYNC_BIT             #only +ve edge (inverted later)
00:000000C4 216A            	   240:    cmp    r1, 2
00:000000C6 3418            	   241:    beq    edge_trail_pos
00:000000C8 316A            	   242:    cmp    r1, 3
00:000000CA 2218            	   243:    beq    edge_lead_pos
00:000000CC 416A            	   244:    cmp    r1, 4
00:000000CE 0E18            	   245:    beq    edge_trail_both
00:000000D0 516A            	   246:    cmp    r1, 5
00:000000D2 CF18            	   247:    bne    wait_for_command
                            	   248:    #if here then edge_lead_both
                            	   249: 
                            	   250: edge_lead_both:
                            	   251:    EDGE_DETECT
                            	     1M waitPSE1:
00:000000D4 4008            	     2M    ld     r0, (r4)
00:000000D6 2045            	     3M    eor    r0, r2
00:000000D8 106D            	     4M    btst   r0, PSYNC_BIT
00:000000DA FD18            	     5M    bne    waitPSE1
00:000000DC 2045            	     6M    eor    r0, r2       #restore r0 value
00:000000DE 1275            	     7M    bchg   r2, PSYNC_BIT
00:000000E0 706D            	   252:    btst   r0, SYNC_BIT
00:000000E2 F918            	   253:    bne    edge_lead_both
00:000000E4 5D31            	   254:    st     r13, DATA_BUFFER_0_offset(r5)   #lsbit flags sync detected
00:000000E6 009E4100        	   255:    b      done_simple_sync
                            	   256: 
                            	   257: edge_trail_both:
                            	   258:    EDGE_DETECT
                            	     1M waitPSE2:
00:000000EA 4008            	     2M    ld     r0, (r4)
00:000000EC 2045            	     3M    eor    r0, r2
00:000000EE 106D            	     4M    btst   r0, PSYNC_BIT
00:000000F0 FD18            	     5M    bne    waitPSE2
00:000000F2 2045            	     6M    eor    r0, r2       #restore r0 value
00:000000F4 1275            	     7M    bchg   r2, PSYNC_BIT
00:000000F6 706D            	   259:    btst   r0, SYNC_BIT
00:000000F8 F918            	   260:    bne    edge_trail_both
00:000000FA 5D31            	   261:    st     r13, DATA_BUFFER_0_offset(r5)   #lsbit flags sync detected
                            	   262: edge_trail_both_hi:
                            	   263:    EDGE_DETECT
                            	     1M waitPSE3:
00:000000FC 4008            	     2M    ld     r0, (r4)
00:000000FE 2045            	     3M    eor    r0, r2
00:00000100 106D            	     4M    btst   r0, PSYNC_BIT
00:00000102 FD18            	     5M    bne    waitPSE3
00:00000104 2045            	     6M    eor    r0, r2       #restore r0 value
00:00000106 1275            	     7M    bchg   r2, PSYNC_BIT
00:00000108 706D            	   264:    btst   r0, SYNC_BIT
00:0000010A 7918            	   265:    beq    edge_trail_both_hi
00:0000010C 2E1F            	   266:    b      done_simple_sync
                            	   267: 
                            	   268: edge_lead_neg:
                            	   269: edge_lead_pos:
                            	   270:    #incoming psync state controls edge
                            	   271: wait_csync_lo2:
                            	   272:    EDGE_DETECT
                            	     1M waitPSE4:
00:0000010E 4008            	     2M    ld     r0, (r4)
00:00000110 2045            	     3M    eor    r0, r2
00:00000112 106D            	     4M    btst   r0, PSYNC_BIT
00:00000114 FD18            	     5M    bne    waitPSE4
00:00000116 2045            	     6M    eor    r0, r2       #restore r0 value
00:00000118 1275            	     7M    bchg   r2, PSYNC_BIT
                            	   273:    EDGE_DETECT
                            	     1M waitPSE5:
00:0000011A 4008            	     2M    ld     r0, (r4)
00:0000011C 2045            	     3M    eor    r0, r2
00:0000011E 106D            	     4M    btst   r0, PSYNC_BIT
00:00000120 FD18            	     5M    bne    waitPSE5
00:00000122 2045            	     6M    eor    r0, r2       #restore r0 value
00:00000124 1275            	     7M    bchg   r2, PSYNC_BIT
00:00000126 706D            	   274:    btst   r0, SYNC_BIT
00:00000128 F318            	   275:    bne    wait_csync_lo2
00:0000012A 5D31            	   276:    st     r13, DATA_BUFFER_0_offset(r5)   #lsbit flags sync detected
00:0000012C 1E1F            	   277:    b      done_simple_sync
                            	   278: 
                            	   279: edge_trail_neg:
                            	   280: edge_trail_pos:
                            	   281:    #incoming psync state controls edge *** this one used by amiga
                            	   282: wait_csync_lo:
                            	   283:    EDGE_DETECT
                            	     1M waitPSE6:
00:0000012E 4008            	     2M    ld     r0, (r4)
00:00000130 2045            	     3M    eor    r0, r2
00:00000132 106D            	     4M    btst   r0, PSYNC_BIT
00:00000134 FD18            	     5M    bne    waitPSE6
00:00000136 2045            	     6M    eor    r0, r2       #restore r0 value
00:00000138 1275            	     7M    bchg   r2, PSYNC_BIT
                            	   284:    EDGE_DETECT
                            	     1M waitPSE7:
00:0000013A 4008            	     2M    ld     r0, (r4)
00:0000013C 2045            	     3M    eor    r0, r2
00:0000013E 106D            	     4M    btst   r0, PSYNC_BIT
00:00000140 FD18            	     5M    bne    waitPSE7
00:00000142 2045            	     6M    eor    r0, r2       #restore r0 value
00:00000144 1275            	     7M    bchg   r2, PSYNC_BIT
00:00000146 706D            	   285:    btst   r0, SYNC_BIT
00:00000148 F318            	   286:    bne    wait_csync_lo
00:0000014A 5D31            	   287:    st     r13, DATA_BUFFER_0_offset(r5)   #lsbit flags sync detected
                            	   288: wait_csync_hi:
                            	   289:    EDGE_DETECT
                            	     1M waitPSE8:
00:0000014C 4008            	     2M    ld     r0, (r4)
00:0000014E 2045            	     3M    eor    r0, r2
00:00000150 106D            	     4M    btst   r0, PSYNC_BIT
00:00000152 FD18            	     5M    bne    waitPSE8
00:00000154 2045            	     6M    eor    r0, r2       #restore r0 value
00:00000156 1275            	     7M    bchg   r2, PSYNC_BIT
                            	   290:    EDGE_DETECT
                            	     1M waitPSE9:
00:00000158 4008            	     2M    ld     r0, (r4)
00:0000015A 2045            	     3M    eor    r0, r2
00:0000015C 106D            	     4M    btst   r0, PSYNC_BIT
00:0000015E FD18            	     5M    bne    waitPSE9
00:00000160 2045            	     6M    eor    r0, r2       #restore r0 value
00:00000162 1275            	     7M    bchg   r2, PSYNC_BIT
00:00000164 706D            	   291:    btst   r0, SYNC_BIT
00:00000166 7318            	   292:    beq    wait_csync_hi
                            	   293: 
                            	   294: done_simple_sync:
00:00000168 126D            	   295:    btst   r2, PSYNC_BIT
00:0000016A 8718            	   296:    bne    no_compensate_psync
                            	   297:    EDGE_DETECT           #have to compensate because capture hard coded to always start on same edge
                            	     1M waitPSE10:
00:0000016C 4008            	     2M    ld     r0, (r4)
00:0000016E 2045            	     3M    eor    r0, r2
00:00000170 106D            	     4M    btst   r0, PSYNC_BIT
00:00000172 FD18            	     5M    bne    waitPSE10
00:00000174 2045            	     6M    eor    r0, r2       #restore r0 value
00:00000176 1275            	     7M    bchg   r2, PSYNC_BIT
                            	   298: no_compensate_psync:
00:00000178 8240            	   299:    mov    r2, r8         #set the default state of the control bits
00:0000017A 121F            	   300:    b      capture_rest
                            	   301: 
                            	   302: do_capture:
00:0000017C D36C            	   303:    btst   r3, OLD_FIRMWARE_FLAG         #bit signals old firmware capture, requires double reads as psync not pipelined
00:0000017E 00919D00        	   304:    bne    ofw_capture
                            	   305: 
                            	   306: wait_csync_lo_cpld:
00:00000182 5020            	   307:    ld     r0, GPU_COMMAND_offset(r5)
00:00000184 E06D            	   308:    btst   r0, SYNC_ABORT_FLAG
00:00000186 8C18            	   309:    bne    capture_rest
00:00000188 4008            	   310:    ld     r0, (r4)
00:0000018A 706D            	   311:    btst   r0, SYNC_BIT
00:0000018C FB18            	   312:    bne    wait_csync_lo_cpld
                            	   313: 
00:0000018E 036D            	   314:    btst   r3, LEADING_SYNC_FLAG
00:00000190 8718            	   315:    bne    capture_rest
                            	   316: 
                            	   317: wait_csync_hi_cpld:
00:00000192 5020            	   318:    ld     r0, GPU_COMMAND_offset(r5)
00:00000194 E06D            	   319:    btst   r0, SYNC_ABORT_FLAG
00:00000196 8418            	   320:    bne    capture_rest
00:00000198 4008            	   321:    ld     r0, (r4)
00:0000019A 706D            	   322:    btst   r0, SYNC_BIT
00:0000019C 7B18            	   323:    beq    wait_csync_hi_cpld
                            	   324: 
                            	   325: capture_rest:
00:0000019E E36C            	   326:    btst   r3, HIGH_LATENCY_FLAG         #bit signals high latency capture, only suitable for 9/12bpp modes
00:000001A0 00914801        	   327:    bne    hl_capture
                            	   328: 
00:000001A4 7347            	   329:    and    r3, r7         #mask off any command bits (max capture is 4095 psync cycles)
00:000001A6 1362            	   330:    add    r3, 1          #round up to multiple of 2
00:000001A8 137A            	   331:    lsr    r3, 1          #divide by 2 as capturing 2 samples per cycle
                            	   332: 
                            	   333: capture_loop:
                            	   334:    LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo11:
00:000001AA 4008            	     2M    ld     r0, (r4)
00:000001AC 106D            	     3M    btst   r0, PSYNC_BIT
00:000001AE FE18            	     4M    bne    wait_psync_lo11
00:000001B0 806D            	     5M    btst   r0, MUX_BIT
00:000001B2 6047            	     6M    and    r0, r6
00:000001B4 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000001B8 1366            	     8M    sub    r3, 1
00:000001BA 204D            	     9M    or     r0, r2           #merge bit state
                            	   335:    HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi12:
00:000001BC 4108            	     2M    ld     r1, (r4)
00:000001BE 116D            	     3M    btst   r1, PSYNC_BIT
00:000001C0 7E18            	     4M    beq    wait_psync_hi12
00:000001C2 816D            	     5M    btst   r1, MUX_BIT
00:000001C4 6147            	     6M    and    r1, r6
00:000001C6 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000001CA 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:000001CC 036A            	     9M    cmp    r3, 0
00:000001CE 104D            	    10M    or     r0, r1
                            	   336: 
00:000001D0 5031            	   337:    st     r0, DATA_BUFFER_0_offset(r5)
00:000001D2 7F904FFF        	   338:    beq    wait_for_command
                            	   339: 
                            	   340:    LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo13:
00:000001D6 4008            	     2M    ld     r0, (r4)
00:000001D8 106D            	     3M    btst   r0, PSYNC_BIT
00:000001DA FE18            	     4M    bne    wait_psync_lo13
00:000001DC 806D            	     5M    btst   r0, MUX_BIT
00:000001DE 6047            	     6M    and    r0, r6
00:000001E0 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000001E4 1366            	     8M    sub    r3, 1
00:000001E6 204D            	     9M    or     r0, r2           #merge bit state
                            	   341:    HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi14:
00:000001E8 4108            	     2M    ld     r1, (r4)
00:000001EA 116D            	     3M    btst   r1, PSYNC_BIT
00:000001EC 7E18            	     4M    beq    wait_psync_hi14
00:000001EE 816D            	     5M    btst   r1, MUX_BIT
00:000001F0 6147            	     6M    and    r1, r6
00:000001F2 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000001F6 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:000001F8 036A            	     9M    cmp    r3, 0
00:000001FA 104D            	    10M    or     r0, r1
                            	   342: 
00:000001FC 5032            	   343:    st     r0, DATA_BUFFER_1_offset(r5)
00:000001FE 7F9039FF        	   344:    beq    wait_for_command
                            	   345: 
                            	   346:    LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo15:
00:00000202 4008            	     2M    ld     r0, (r4)
00:00000204 106D            	     3M    btst   r0, PSYNC_BIT
00:00000206 FE18            	     4M    bne    wait_psync_lo15
00:00000208 806D            	     5M    btst   r0, MUX_BIT
00:0000020A 6047            	     6M    and    r0, r6
00:0000020C 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:00000210 1366            	     8M    sub    r3, 1
00:00000212 204D            	     9M    or     r0, r2           #merge bit state
                            	   347:    HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi16:
00:00000214 4108            	     2M    ld     r1, (r4)
00:00000216 116D            	     3M    btst   r1, PSYNC_BIT
00:00000218 7E18            	     4M    beq    wait_psync_hi16
00:0000021A 816D            	     5M    btst   r1, MUX_BIT
00:0000021C 6147            	     6M    and    r1, r6
00:0000021E 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:00000222 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:00000224 036A            	     9M    cmp    r3, 0
00:00000226 104D            	    10M    or     r0, r1
                            	   348: 
00:00000228 5033            	   349:    st     r0, DATA_BUFFER_2_offset(r5)
00:0000022A 7F9023FF        	   350:    beq    wait_for_command
                            	   351: 
                            	   352:    LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo17:
00:0000022E 4008            	     2M    ld     r0, (r4)
00:00000230 106D            	     3M    btst   r0, PSYNC_BIT
00:00000232 FE18            	     4M    bne    wait_psync_lo17
00:00000234 806D            	     5M    btst   r0, MUX_BIT
00:00000236 6047            	     6M    and    r0, r6
00:00000238 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000023C 1366            	     8M    sub    r3, 1
00:0000023E 204D            	     9M    or     r0, r2           #merge bit state
                            	   353:    HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi18:
00:00000240 4108            	     2M    ld     r1, (r4)
00:00000242 116D            	     3M    btst   r1, PSYNC_BIT
00:00000244 7E18            	     4M    beq    wait_psync_hi18
00:00000246 816D            	     5M    btst   r1, MUX_BIT
00:00000248 6147            	     6M    and    r1, r6
00:0000024A 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000024E 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:00000250 036A            	     9M    cmp    r3, 0
00:00000252 104D            	    10M    or     r0, r1
                            	   354: 
00:00000254 5035            	   355:    st     r0, DATA_BUFFER_3_offset(r5)
00:00000256 7F900DFF        	   356:    beq    wait_for_command
                            	   357: 
                            	   358:    LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo19:
00:0000025A 4008            	     2M    ld     r0, (r4)
00:0000025C 106D            	     3M    btst   r0, PSYNC_BIT
00:0000025E FE18            	     4M    bne    wait_psync_lo19
00:00000260 806D            	     5M    btst   r0, MUX_BIT
00:00000262 6047            	     6M    and    r0, r6
00:00000264 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:00000268 1366            	     8M    sub    r3, 1
00:0000026A 204D            	     9M    or     r0, r2           #merge bit state
                            	   359:    HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi20:
00:0000026C 4108            	     2M    ld     r1, (r4)
00:0000026E 116D            	     3M    btst   r1, PSYNC_BIT
00:00000270 7E18            	     4M    beq    wait_psync_hi20
00:00000272 816D            	     5M    btst   r1, MUX_BIT
00:00000274 6147            	     6M    and    r1, r6
00:00000276 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000027A 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:0000027C 036A            	     9M    cmp    r3, 0
00:0000027E 104D            	    10M    or     r0, r1
                            	   360: 
00:00000280 5036            	   361:    st     r0, DATA_BUFFER_4_offset(r5)
00:00000282 7F90F7FE        	   362:    beq    wait_for_command
                            	   363: 
                            	   364:    LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo21:
00:00000286 4008            	     2M    ld     r0, (r4)
00:00000288 106D            	     3M    btst   r0, PSYNC_BIT
00:0000028A FE18            	     4M    bne    wait_psync_lo21
00:0000028C 806D            	     5M    btst   r0, MUX_BIT
00:0000028E 6047            	     6M    and    r0, r6
00:00000290 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:00000294 1366            	     8M    sub    r3, 1
00:00000296 204D            	     9M    or     r0, r2           #merge bit state
00:00000298 1275            	   365:    bchg   r2, PSYNC_BIT        #invert the software psync bit every 12 samples / 6 words
                            	   366:    HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi22:
00:0000029A 4108            	     2M    ld     r1, (r4)
00:0000029C 116D            	     3M    btst   r1, PSYNC_BIT
00:0000029E 7E18            	     4M    beq    wait_psync_hi22
00:000002A0 816D            	     5M    btst   r1, MUX_BIT
00:000002A2 6147            	     6M    and    r1, r6
00:000002A4 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000002A8 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:000002AA 036A            	     9M    cmp    r3, 0
00:000002AC 104D            	    10M    or     r0, r1
                            	   367: 
00:000002AE 5037            	   368:    st     r0, DATA_BUFFER_5_offset(r5)
00:000002B0 7F90E0FE        	   369:    beq    wait_for_command
                            	   370: 
00:000002B4 7F9E7BFF        	   371:    b      capture_loop
                            	   372: 
                            	   373: ofw_capture:
                            	   374: ofw_wait_csync_lo_cpld:
00:000002B8 5020            	   375:    ld     r0, GPU_COMMAND_offset(r5)
00:000002BA E06D            	   376:    btst   r0, SYNC_ABORT_FLAG
00:000002BC A418            	   377:    bne    ofw_capture_rest
00:000002BE 4008            	   378:    ld     r0, (r4)
00:000002C0 706D            	   379:    btst   r0, SYNC_BIT
00:000002C2 FB18            	   380:    bne    ofw_wait_csync_lo_cpld
00:000002C4 4008            	   381:    ld     r0, (r4)
00:000002C6 706D            	   382:    btst   r0, SYNC_BIT
00:000002C8 F818            	   383:    bne    ofw_wait_csync_lo_cpld
00:000002CA 4008            	   384:    ld     r0, (r4)
00:000002CC 706D            	   385:    btst   r0, SYNC_BIT
00:000002CE F518            	   386:    bne    ofw_wait_csync_lo_cpld
00:000002D0 4008            	   387:    ld     r0, (r4)
00:000002D2 706D            	   388:    btst   r0, SYNC_BIT
00:000002D4 F218            	   389:    bne    ofw_wait_csync_lo_cpld
00:000002D6 4008            	   390:    ld     r0, (r4)
00:000002D8 706D            	   391:    btst   r0, SYNC_BIT
00:000002DA EF18            	   392:    bne    ofw_wait_csync_lo_cpld
                            	   393: 
00:000002DC 036D            	   394:    btst   r3, LEADING_SYNC_FLAG
00:000002DE 9318            	   395:    bne    ofw_capture_rest
                            	   396: 
                            	   397: ofw_wait_csync_hi_cpld:
00:000002E0 5020            	   398:    ld     r0, GPU_COMMAND_offset(r5)
00:000002E2 E06D            	   399:    btst   r0, SYNC_ABORT_FLAG
00:000002E4 9018            	   400:    bne    ofw_capture_rest
00:000002E6 4008            	   401:    ld     r0, (r4)
00:000002E8 706D            	   402:    btst   r0, SYNC_BIT
00:000002EA 7B18            	   403:    beq    ofw_wait_csync_hi_cpld
00:000002EC 4008            	   404:    ld     r0, (r4)
00:000002EE 706D            	   405:    btst   r0, SYNC_BIT
00:000002F0 7818            	   406:    beq    ofw_wait_csync_hi_cpld
00:000002F2 4008            	   407:    ld     r0, (r4)
00:000002F4 706D            	   408:    btst   r0, SYNC_BIT
00:000002F6 7518            	   409:    beq    ofw_wait_csync_hi_cpld
00:000002F8 4008            	   410:    ld     r0, (r4)
00:000002FA 706D            	   411:    btst   r0, SYNC_BIT
00:000002FC 7218            	   412:    beq    ofw_wait_csync_hi_cpld
00:000002FE 4008            	   413:    ld     r0, (r4)
00:00000300 706D            	   414:    btst   r0, SYNC_BIT
00:00000302 6F18            	   415:    beq    ofw_wait_csync_hi_cpld
                            	   416: 
                            	   417: ofw_capture_rest:
00:00000304 7347            	   418:    and    r3, r7         #mask off any command bits (max capture is 4095 psync cycles)
00:00000306 1362            	   419:    add    r3, 1          #round up to multiple of 2
00:00000308 137A            	   420:    lsr    r3, 1          #divide by 2 as capturing 2 samples per cycle
                            	   421: 
                            	   422: old_firmware_capture_loop:
                            	   423:    OFW_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo23:
00:0000030A 4008            	     2M    ld     r0, (r4)
00:0000030C 106D            	     3M    btst   r0, PSYNC_BIT
00:0000030E FE18            	     4M    bne    wait_psync_lo23
00:00000310 4008            	     5M    ld     r0, (r4)
00:00000312 806D            	     6M    btst   r0, MUX_BIT
00:00000314 6047            	     7M    and    r0, r6
00:00000316 00C2CE00        	     8M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000031A 1366            	     9M    sub    r3, 1
00:0000031C 204D            	    10M    or     r0, r2           #merge bit state
                            	   424:    OFW_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi24:
00:0000031E 4108            	     2M    ld     r1, (r4)
00:00000320 116D            	     3M    btst   r1, PSYNC_BIT
00:00000322 7E18            	     4M    beq    wait_psync_hi24
00:00000324 4108            	     5M    ld     r1, (r4)
00:00000326 816D            	     6M    btst   r1, MUX_BIT
00:00000328 6147            	     7M    and    r1, r6
00:0000032A 01C2CE08        	     8M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000032E 017D            	     9M    lsl    r1, 16           #merge lo and hi samples
00:00000330 036A            	    10M    cmp    r3, 0
00:00000332 104D            	    11M    or     r0, r1
                            	   425: 
00:00000334 5031            	   426:    st     r0, DATA_BUFFER_0_offset(r5)
00:00000336 7F909DFE        	   427:    beq    wait_for_command
                            	   428: 
                            	   429:    OFW_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo25:
00:0000033A 4008            	     2M    ld     r0, (r4)
00:0000033C 106D            	     3M    btst   r0, PSYNC_BIT
00:0000033E FE18            	     4M    bne    wait_psync_lo25
00:00000340 4008            	     5M    ld     r0, (r4)
00:00000342 806D            	     6M    btst   r0, MUX_BIT
00:00000344 6047            	     7M    and    r0, r6
00:00000346 00C2CE00        	     8M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000034A 1366            	     9M    sub    r3, 1
00:0000034C 204D            	    10M    or     r0, r2           #merge bit state
                            	   430:    OFW_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi26:
00:0000034E 4108            	     2M    ld     r1, (r4)
00:00000350 116D            	     3M    btst   r1, PSYNC_BIT
00:00000352 7E18            	     4M    beq    wait_psync_hi26
00:00000354 4108            	     5M    ld     r1, (r4)
00:00000356 816D            	     6M    btst   r1, MUX_BIT
00:00000358 6147            	     7M    and    r1, r6
00:0000035A 01C2CE08        	     8M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000035E 017D            	     9M    lsl    r1, 16           #merge lo and hi samples
00:00000360 036A            	    10M    cmp    r3, 0
00:00000362 104D            	    11M    or     r0, r1
                            	   431: 
00:00000364 5032            	   432:    st     r0, DATA_BUFFER_1_offset(r5)
00:00000366 7F9085FE        	   433:    beq    wait_for_command
                            	   434: 
                            	   435:    OFW_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo27:
00:0000036A 4008            	     2M    ld     r0, (r4)
00:0000036C 106D            	     3M    btst   r0, PSYNC_BIT
00:0000036E FE18            	     4M    bne    wait_psync_lo27
00:00000370 4008            	     5M    ld     r0, (r4)
00:00000372 806D            	     6M    btst   r0, MUX_BIT
00:00000374 6047            	     7M    and    r0, r6
00:00000376 00C2CE00        	     8M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000037A 1366            	     9M    sub    r3, 1
00:0000037C 204D            	    10M    or     r0, r2           #merge bit state
                            	   436:    OFW_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi28:
00:0000037E 4108            	     2M    ld     r1, (r4)
00:00000380 116D            	     3M    btst   r1, PSYNC_BIT
00:00000382 7E18            	     4M    beq    wait_psync_hi28
00:00000384 4108            	     5M    ld     r1, (r4)
00:00000386 816D            	     6M    btst   r1, MUX_BIT
00:00000388 6147            	     7M    and    r1, r6
00:0000038A 01C2CE08        	     8M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000038E 017D            	     9M    lsl    r1, 16           #merge lo and hi samples
00:00000390 036A            	    10M    cmp    r3, 0
00:00000392 104D            	    11M    or     r0, r1
                            	   437: 
00:00000394 5033            	   438:    st     r0, DATA_BUFFER_2_offset(r5)
00:00000396 7F906DFE        	   439:    beq    wait_for_command
                            	   440: 
                            	   441:    OFW_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo29:
00:0000039A 4008            	     2M    ld     r0, (r4)
00:0000039C 106D            	     3M    btst   r0, PSYNC_BIT
00:0000039E FE18            	     4M    bne    wait_psync_lo29
00:000003A0 4008            	     5M    ld     r0, (r4)
00:000003A2 806D            	     6M    btst   r0, MUX_BIT
00:000003A4 6047            	     7M    and    r0, r6
00:000003A6 00C2CE00        	     8M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000003AA 1366            	     9M    sub    r3, 1
00:000003AC 204D            	    10M    or     r0, r2           #merge bit state
                            	   442:    OFW_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi30:
00:000003AE 4108            	     2M    ld     r1, (r4)
00:000003B0 116D            	     3M    btst   r1, PSYNC_BIT
00:000003B2 7E18            	     4M    beq    wait_psync_hi30
00:000003B4 4108            	     5M    ld     r1, (r4)
00:000003B6 816D            	     6M    btst   r1, MUX_BIT
00:000003B8 6147            	     7M    and    r1, r6
00:000003BA 01C2CE08        	     8M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000003BE 017D            	     9M    lsl    r1, 16           #merge lo and hi samples
00:000003C0 036A            	    10M    cmp    r3, 0
00:000003C2 104D            	    11M    or     r0, r1
                            	   443: 
00:000003C4 5035            	   444:    st     r0, DATA_BUFFER_3_offset(r5)
00:000003C6 7F9055FE        	   445:    beq    wait_for_command
                            	   446: 
                            	   447:    OFW_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo31:
00:000003CA 4008            	     2M    ld     r0, (r4)
00:000003CC 106D            	     3M    btst   r0, PSYNC_BIT
00:000003CE FE18            	     4M    bne    wait_psync_lo31
00:000003D0 4008            	     5M    ld     r0, (r4)
00:000003D2 806D            	     6M    btst   r0, MUX_BIT
00:000003D4 6047            	     7M    and    r0, r6
00:000003D6 00C2CE00        	     8M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000003DA 1366            	     9M    sub    r3, 1
00:000003DC 204D            	    10M    or     r0, r2           #merge bit state
                            	   448:    OFW_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi32:
00:000003DE 4108            	     2M    ld     r1, (r4)
00:000003E0 116D            	     3M    btst   r1, PSYNC_BIT
00:000003E2 7E18            	     4M    beq    wait_psync_hi32
00:000003E4 4108            	     5M    ld     r1, (r4)
00:000003E6 816D            	     6M    btst   r1, MUX_BIT
00:000003E8 6147            	     7M    and    r1, r6
00:000003EA 01C2CE08        	     8M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000003EE 017D            	     9M    lsl    r1, 16           #merge lo and hi samples
00:000003F0 036A            	    10M    cmp    r3, 0
00:000003F2 104D            	    11M    or     r0, r1
                            	   449: 
00:000003F4 5036            	   450:    st     r0, DATA_BUFFER_4_offset(r5)
00:000003F6 7F903DFE        	   451:    beq    wait_for_command
                            	   452: 
                            	   453:    OFW_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo33:
00:000003FA 4008            	     2M    ld     r0, (r4)
00:000003FC 106D            	     3M    btst   r0, PSYNC_BIT
00:000003FE FE18            	     4M    bne    wait_psync_lo33
00:00000400 4008            	     5M    ld     r0, (r4)
00:00000402 806D            	     6M    btst   r0, MUX_BIT
00:00000404 6047            	     7M    and    r0, r6
00:00000406 00C2CE00        	     8M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000040A 1366            	     9M    sub    r3, 1
00:0000040C 204D            	    10M    or     r0, r2           #merge bit state
00:0000040E 1275            	   454:    bchg   r2, PSYNC_BIT        #invert the software psync bit every 12 samples / 6 words
                            	   455:    OFW_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi34:
00:00000410 4108            	     2M    ld     r1, (r4)
00:00000412 116D            	     3M    btst   r1, PSYNC_BIT
00:00000414 7E18            	     4M    beq    wait_psync_hi34
00:00000416 4108            	     5M    ld     r1, (r4)
00:00000418 816D            	     6M    btst   r1, MUX_BIT
00:0000041A 6147            	     7M    and    r1, r6
00:0000041C 01C2CE08        	     8M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:00000420 017D            	     9M    lsl    r1, 16           #merge lo and hi samples
00:00000422 036A            	    10M    cmp    r3, 0
00:00000424 104D            	    11M    or     r0, r1
                            	   456: 
00:00000426 5037            	   457:    st     r0, DATA_BUFFER_5_offset(r5)
00:00000428 7F9024FE        	   458:    beq    wait_for_command
                            	   459: 
00:0000042C 7F9E6FFF        	   460:    b      old_firmware_capture_loop
                            	   461: 
                            	   462: hl_capture:
00:00000430 7347            	   463:    and    r3, r7           #mask off any command bits (max capture is 4095 psync cycles)
00:00000432 3040            	   464:    mov    r0, r3
00:00000434 B062            	   465:    add    r0, 11           #round up to multiple of 12
00:00000436 C160            	   466:    mov    r1, 12
00:00000438 E3C40107        	   467:    divu   r3, r0, r1       #divide by 12 as capturing 12 samples per cycle
00:0000043C 1275            	   468:    bchg   r2, PSYNC_BIT    #pre invert the software psync bit
                            	   469: 
                            	   470: high_latency_capture_loop:
                            	   471:    HL_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo35:
00:0000043E 4008            	     2M    ld     r0, (r4)
00:00000440 106D            	     3M    btst   r0, PSYNC_BIT
00:00000442 FE18            	     4M    bne    wait_psync_lo35
00:00000444 806D            	     5M    btst   r0, MUX_BIT
00:00000446 6047            	     6M    and    r0, r6
00:00000448 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	     8M 
00:0000044C 1275            	   472:    bchg   r2, PSYNC_BIT    #invert the software psync bit every 12 samples / 6 words
00:0000044E 204D            	   473:    or     r0, r2           #merge bit state
                            	   474:    HL_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi36:
00:00000450 4108            	     2M    ld     r1, (r4)
00:00000452 116D            	     3M    btst   r1, PSYNC_BIT
00:00000454 7E18            	     4M    beq    wait_psync_hi36
00:00000456 816D            	     5M    btst   r1, MUX_BIT
00:00000458 6147            	     6M    and    r1, r6
00:0000045A 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000045E 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:00000460 104D            	     9M    or     r0, r1
00:00000462 104D            	   475:    or     r0, r1
00:00000464 5031            	   476:    st     r0, DATA_BUFFER_0_offset(r5)
                            	   477: 
                            	   478:    HL_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo37:
00:00000466 4008            	     2M    ld     r0, (r4)
00:00000468 106D            	     3M    btst   r0, PSYNC_BIT
00:0000046A FE18            	     4M    bne    wait_psync_lo37
00:0000046C 806D            	     5M    btst   r0, MUX_BIT
00:0000046E 6047            	     6M    and    r0, r6
00:00000470 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	     8M 
00:00000474 204D            	   479:    or     r0, r2           #merge bit state
                            	   480:    HL_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi38:
00:00000476 4108            	     2M    ld     r1, (r4)
00:00000478 116D            	     3M    btst   r1, PSYNC_BIT
00:0000047A 7E18            	     4M    beq    wait_psync_hi38
00:0000047C 816D            	     5M    btst   r1, MUX_BIT
00:0000047E 6147            	     6M    and    r1, r6
00:00000480 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:00000484 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:00000486 104D            	     9M    or     r0, r1
00:00000488 104D            	   481:    or     r0, r1
00:0000048A 5032            	   482:    st     r0, DATA_BUFFER_1_offset(r5)
                            	   483: 
                            	   484:    HL_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo39:
00:0000048C 4008            	     2M    ld     r0, (r4)
00:0000048E 106D            	     3M    btst   r0, PSYNC_BIT
00:00000490 FE18            	     4M    bne    wait_psync_lo39
00:00000492 806D            	     5M    btst   r0, MUX_BIT
00:00000494 6047            	     6M    and    r0, r6
00:00000496 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	     8M 
00:0000049A 1366            	   485:    sub    r3, 1
00:0000049C 204D            	   486:    or     r0, r2           #merge bit state
                            	   487:    HL_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi40:
00:0000049E 4108            	     2M    ld     r1, (r4)
00:000004A0 116D            	     3M    btst   r1, PSYNC_BIT
00:000004A2 7E18            	     4M    beq    wait_psync_hi40
00:000004A4 816D            	     5M    btst   r1, MUX_BIT
00:000004A6 6147            	     6M    and    r1, r6
00:000004A8 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000004AC 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:000004AE 104D            	     9M    or     r0, r1
00:000004B0 104D            	   488:    or     r0, r1
00:000004B2 5033            	   489:    st     r0, DATA_BUFFER_2_offset(r5)
                            	   490: 
                            	   491:    HL_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo41:
00:000004B4 4008            	     2M    ld     r0, (r4)
00:000004B6 106D            	     3M    btst   r0, PSYNC_BIT
00:000004B8 FE18            	     4M    bne    wait_psync_lo41
00:000004BA 806D            	     5M    btst   r0, MUX_BIT
00:000004BC 6047            	     6M    and    r0, r6
00:000004BE 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	     8M 
00:000004C2 204D            	   492:    or     r0, r2           #merge bit state
                            	   493:    HL_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi42:
00:000004C4 4108            	     2M    ld     r1, (r4)
00:000004C6 116D            	     3M    btst   r1, PSYNC_BIT
00:000004C8 7E18            	     4M    beq    wait_psync_hi42
00:000004CA 816D            	     5M    btst   r1, MUX_BIT
00:000004CC 6147            	     6M    and    r1, r6
00:000004CE 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000004D2 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:000004D4 104D            	     9M    or     r0, r1
00:000004D6 104D            	   494:    or     r0, r1
00:000004D8 5035            	   495:    st     r0, DATA_BUFFER_3_offset(r5)
                            	   496: 
                            	   497:    HL_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo43:
00:000004DA 4008            	     2M    ld     r0, (r4)
00:000004DC 106D            	     3M    btst   r0, PSYNC_BIT
00:000004DE FE18            	     4M    bne    wait_psync_lo43
00:000004E0 806D            	     5M    btst   r0, MUX_BIT
00:000004E2 6047            	     6M    and    r0, r6
00:000004E4 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	     8M 
00:000004E8 204D            	   498:    or     r0, r2           #merge bit state
                            	   499:    HL_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi44:
00:000004EA 4108            	     2M    ld     r1, (r4)
00:000004EC 116D            	     3M    btst   r1, PSYNC_BIT
00:000004EE 7E18            	     4M    beq    wait_psync_hi44
00:000004F0 816D            	     5M    btst   r1, MUX_BIT
00:000004F2 6147            	     6M    and    r1, r6
00:000004F4 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:000004F8 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:000004FA 104D            	     9M    or     r0, r1
00:000004FC 104D            	   500:    or     r0, r1
00:000004FE 5036            	   501:    st     r0, DATA_BUFFER_4_offset(r5)
                            	   502: 
                            	   503:    HL_LO_PSYNC_CAPTURE
                            	     1M wait_psync_lo45:
00:00000500 4008            	     2M    ld     r0, (r4)
00:00000502 106D            	     3M    btst   r0, PSYNC_BIT
00:00000504 FE18            	     4M    bne    wait_psync_lo45
00:00000506 806D            	     5M    btst   r0, MUX_BIT
00:00000508 6047            	     6M    and    r0, r6
00:0000050A 00C2CE00        	     7M    bsetne r0, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
                            	     8M 
00:0000050E 204D            	   504:    or     r0, r2           #merge bit state
                            	   505:    HL_HI_PSYNC_CAPTURE
                            	     1M wait_psync_hi46:
00:00000510 4108            	     2M    ld     r1, (r4)
00:00000512 116D            	     3M    btst   r1, PSYNC_BIT
00:00000514 7E18            	     4M    beq    wait_psync_hi46
00:00000516 816D            	     5M    btst   r1, MUX_BIT
00:00000518 6147            	     6M    and    r1, r6
00:0000051A 01C2CE08        	     7M    bsetne r1, ALT_MUX_BIT  #move mux bit to position in 16 bit sample
00:0000051E 017D            	     8M    lsl    r1, 16           #merge lo and hi samples
00:00000520 104D            	     9M    or     r0, r1
00:00000522 036A            	   506:    cmp    r3, 0
00:00000524 104D            	   507:    or     r0, r1
00:00000526 5037            	   508:    st     r0, DATA_BUFFER_5_offset(r5)
                            	   509: 
00:00000528 7F918BFF        	   510:    bne    high_latency_capture_loop
                            	   511: 
00:0000052C 7F9EA2FD        	   512:    b      wait_for_command
                            	   513: 
                            	   514: 


Symbols by name:
ALT_MUX_BIT                      S:0000000E
COMMAND_MASK                     S:00000FFF
DATA_BUFFER_0_offset             S:00000004
DATA_BUFFER_1_offset             S:00000008
DATA_BUFFER_2_offset             S:0000000C
DATA_BUFFER_3_offset             S:00000014
DATA_BUFFER_4_offset             S:00000018
DATA_BUFFER_5_offset             S:0000001C
DEFAULT_BIT_STATE                S:00020001
FINAL_BIT                        S:0000001F
GPLEV0                           S:7E200034
GPU_COMMAND                      S:7E0000A0
GPU_COMMAND_offset               S:00000000
GPU_DATA_BUFFER_5                S:7E0000BC
HIGH_LATENCY_FLAG                S:0000000E
LEADING_SYNC_FLAG                S:00000010
MUX_BIT                          S:00000018
OLD_FIRMWARE_FLAG                S:0000000D
PSYNC_BIT                        S:00000011
SIMPLE_SYNC_FLAG                 S:0000000F
SYNC_ABORT_FLAG                  S:0000001E
SYNC_BIT                         S:00000017
TERMINATE_FLAG                   S:0000001F
VIDEO_MASK                       S:00003FFC
capture_loop                    00:000001AA
capture_rest                    00:0000019E
do_capture                      00:0000017C
done_simple_sync                00:00000168
edge_lead_both                  00:000000D4
edge_lead_neg                   00:0000010E
edge_lead_pos                   00:0000010E
edge_trail_both                 00:000000EA
edge_trail_both_hi              00:000000FC
edge_trail_neg                  00:0000012E
edge_trail_pos                  00:0000012E
exit                            00:0000003C
high_latency_capture_loop       00:0000043E
hl_capture                      00:00000430
no_compensate_psync             00:00000178
not_gpio_read_benchmark         00:0000001E
not_mbox_write_benchmark        00:00000040
ofw_capture                     00:000002B8
ofw_capture_rest                00:00000304
ofw_wait_csync_hi_cpld          00:000002E0
ofw_wait_csync_lo_cpld          00:000002B8
old_firmware_capture_loop       00:0000030A
read_bench_loop                 00:00000012
waitPSE1                        00:000000D4
waitPSE10                       00:0000016C
waitPSE2                        00:000000EA
waitPSE3                        00:000000FC
waitPSE4                        00:0000010E
waitPSE5                        00:0000011A
waitPSE6                        00:0000012E
waitPSE7                        00:0000013A
waitPSE8                        00:0000014C
waitPSE9                        00:00000158
wait_csync_hi                   00:0000014C
wait_csync_hi_cpld              00:00000192
wait_csync_lo                   00:0000012E
wait_csync_lo2                  00:0000010E
wait_csync_lo_cpld              00:00000182
wait_for_command                00:00000070
wait_for_command_loop           00:00000098
wait_psync_hi12                 00:000001BC
wait_psync_hi14                 00:000001E8
wait_psync_hi16                 00:00000214
wait_psync_hi18                 00:00000240
wait_psync_hi20                 00:0000026C
wait_psync_hi22                 00:0000029A
wait_psync_hi24                 00:0000031E
wait_psync_hi26                 00:0000034E
wait_psync_hi28                 00:0000037E
wait_psync_hi30                 00:000003AE
wait_psync_hi32                 00:000003DE
wait_psync_hi34                 00:00000410
wait_psync_hi36                 00:00000450
wait_psync_hi38                 00:00000476
wait_psync_hi40                 00:0000049E
wait_psync_hi42                 00:000004C4
wait_psync_hi44                 00:000004EA
wait_psync_hi46                 00:00000510
wait_psync_lo11                 00:000001AA
wait_psync_lo13                 00:000001D6
wait_psync_lo15                 00:00000202
wait_psync_lo17                 00:0000022E
wait_psync_lo19                 00:0000025A
wait_psync_lo21                 00:00000286
wait_psync_lo23                 00:0000030A
wait_psync_lo25                 00:0000033A
wait_psync_lo27                 00:0000036A
wait_psync_lo29                 00:0000039A
wait_psync_lo31                 00:000003CA
wait_psync_lo33                 00:000003FA
wait_psync_lo35                 00:0000043E
wait_psync_lo37                 00:00000466
wait_psync_lo39                 00:0000048C
wait_psync_lo41                 00:000004B4
wait_psync_lo43                 00:000004DA
wait_psync_lo45                 00:00000500
write_bench_loop                00:00000030

Symbols by value:
00000000 GPU_COMMAND_offset
00000004 DATA_BUFFER_0_offset
00000008 DATA_BUFFER_1_offset
0000000C DATA_BUFFER_2_offset
0000000D OLD_FIRMWARE_FLAG
0000000E ALT_MUX_BIT
0000000E HIGH_LATENCY_FLAG
0000000F SIMPLE_SYNC_FLAG
00000010 LEADING_SYNC_FLAG
00000011 PSYNC_BIT
00000012 read_bench_loop
00000014 DATA_BUFFER_3_offset
00000017 SYNC_BIT
00000018 DATA_BUFFER_4_offset
00000018 MUX_BIT
0000001C DATA_BUFFER_5_offset
0000001E SYNC_ABORT_FLAG
0000001E not_gpio_read_benchmark
0000001F FINAL_BIT
0000001F TERMINATE_FLAG
00000030 write_bench_loop
0000003C exit
00000040 not_mbox_write_benchmark
00000070 wait_for_command
00000098 wait_for_command_loop
000000D4 edge_lead_both
000000D4 waitPSE1
000000EA edge_trail_both
000000EA waitPSE2
000000FC edge_trail_both_hi
000000FC waitPSE3
0000010E edge_lead_neg
0000010E edge_lead_pos
0000010E waitPSE4
0000010E wait_csync_lo2
0000011A waitPSE5
0000012E edge_trail_neg
0000012E edge_trail_pos
0000012E waitPSE6
0000012E wait_csync_lo
0000013A waitPSE7
0000014C waitPSE8
0000014C wait_csync_hi
00000158 waitPSE9
00000168 done_simple_sync
0000016C waitPSE10
00000178 no_compensate_psync
0000017C do_capture
00000182 wait_csync_lo_cpld
00000192 wait_csync_hi_cpld
0000019E capture_rest
000001AA capture_loop
000001AA wait_psync_lo11
000001BC wait_psync_hi12
000001D6 wait_psync_lo13
000001E8 wait_psync_hi14
00000202 wait_psync_lo15
00000214 wait_psync_hi16
0000022E wait_psync_lo17
00000240 wait_psync_hi18
0000025A wait_psync_lo19
0000026C wait_psync_hi20
00000286 wait_psync_lo21
0000029A wait_psync_hi22
000002B8 ofw_capture
000002B8 ofw_wait_csync_lo_cpld
000002E0 ofw_wait_csync_hi_cpld
00000304 ofw_capture_rest
0000030A old_firmware_capture_loop
0000030A wait_psync_lo23
0000031E wait_psync_hi24
0000033A wait_psync_lo25
0000034E wait_psync_hi26
0000036A wait_psync_lo27
0000037E wait_psync_hi28
0000039A wait_psync_lo29
000003AE wait_psync_hi30
000003CA wait_psync_lo31
000003DE wait_psync_hi32
000003FA wait_psync_lo33
00000410 wait_psync_hi34
00000430 hl_capture
0000043E high_latency_capture_loop
0000043E wait_psync_lo35
00000450 wait_psync_hi36
00000466 wait_psync_lo37
00000476 wait_psync_hi38
0000048C wait_psync_lo39
0000049E wait_psync_hi40
000004B4 wait_psync_lo41
000004C4 wait_psync_hi42
000004DA wait_psync_lo43
000004EA wait_psync_hi44
00000500 wait_psync_lo45
00000510 wait_psync_hi46
00000FFF COMMAND_MASK
00003FFC VIDEO_MASK
00020001 DEFAULT_BIT_STATE
7E0000A0 GPU_COMMAND
7E0000BC GPU_DATA_BUFFER_5
7E200034 GPLEV0
